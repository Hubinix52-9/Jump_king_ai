@startuml
class Evolutionary_alghoritm {
    get_ultimate_individual()
    get_showout()
    get_elite()
    get_generation()
    get_mutation_done()
    get_crossover_done()
    get_fitness_done()
    get_actual_gen()
    get_go_next()
    mutation_wages()
    create_wages()
    create_moves()
    create_population()
    fitness_n_selection()
    crossover()
    more_parents()
    mutation()
    prep_for_next_gen()
    alghoritm_end()
    ultimate_indyvidual()
    create_moves_from_file()
    create_from_file()
    testing_if()
    testing_done_func()
        size_of_generation
    mutation_rate
    generation
    actual_best_score
    ultimate_individual
    fitness_done
    crossover_done
    mutation_done
    go_next
    was_bigger
    showout
    testing
    testing_done
    go_next
    go_next
    actual_best_score
    fitness_done
    crossover_done
    mutation_done
    actual_generation
    fitness_done
    crossover_done
    mutation_done
    go_next
    testing
    testing_done
    showout
    ultimate_individual
    showout
    next_generation
    go_next
    testing
    testing_done
    actual_generation
    testing
    testing_done
    __init__()
}
@enduml